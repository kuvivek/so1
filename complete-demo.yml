apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: users
  labels:
    name: users
  namespace: users-credential
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: users
    spec:
      containers:
      - name: users
        image: kuvivek/users-mysql:0.1.0
        ports:
         - containerPort: 8086
        #env:
        # - name: JAVA_OPTS
        #   value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        envFrom:
          - configMapRef:
              name: javaapp-configmap  
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: javaapp-configmap
  namespace: users-credential
data:
  keys: |
    spring.datasource.url=jdbc:mysql://mysql-standalone:3306/test
---
apiVersion: v1
kind: Service
metadata:
  name: users
  labels:
    name: users
  namespace: users-credential
spec:
  ports:
    # the port that this service should serve on
  - port: 8086
    targetPort: 8086
  selector:
    name: users
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysql-db
  labels:
    name: mysql-db
  namespace: users-credential
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mysql-db
    spec:
      containers:
      - name: msysql-standlone
        image: mysql:5.6
        env:
          - name: "MYSQL_ROOT_PASSWORD"
            value: "password"
          - name: "MYSQL_DATABASE"
            value: "test"
          - name: "MYSQL_USER"
            value: "sa"
          - name: "MYSQL_PASSWORD"
            value: "password"
        ports:
        - name: mysql
          containerPort: 3306
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
  labels:
    name: mysql-db
  namespace: users-credential
spec:
  ports:
    # the port that this service should serve on
  - port: 3306
    targetPort: 3306
  selector:
    name: mysql-db
